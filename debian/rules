#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

%:
	dh $@ 
install:
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	# First step is to unpack the wars in the tomcat webapps dir
	mkdir -p $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geoserver
	mkdir -p $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geonetwork
	unzip $(CURDIR)/GeoNode-*/geoserver.war -d $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geoserver
	unzip $(CURDIR)/GeoNode-*/geonetwork.war -d $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geonetwork
	mkdir -p $(CURDIR)/debian/geonode/var/lib/geoserver/data
	cp -rp $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geoserver/data/* $(CURDIR)/debian/geonode/var/lib/geoserver/data/
	# Second step is to put the apache wsgi and conf files in the right places
	mkdir -p $(CURDIR)/debian/geonode/var/www/geonode/static
	mkdir -p $(CURDIR)/debian/geonode/var/www/geonode/uploaded
	mkdir -p $(CURDIR)/debian/geonode/var/www/geonode/wsgi
	cp -rp $(CURDIR)/debian/support/geonode.wsgi $(CURDIR)/debian/geonode/var/www/geonode/wsgi/
	mkdir -p $(CURDIR)/debian/geonode/etc/apache2/sites-available/
	cp -rp $(CURDIR)/debian/support/geonode.apache $(CURDIR)/debian/geonode/etc/apache2/sites-available/geonode
	mkdir -p $(CURDIR)/debian/geonode/etc/default
	cp -rp $(CURDIR)/debian/support/geonode.local_settings $(CURDIR)/debian/geonode/etc/default/geonode
	cp -rp $(CURDIR)/debian/support/geonode.robots $(CURDIR)/debian/geonode/var/www/geonode/robots.txt
	# Third step is to unpack the pybundle and put the virtualenv in the right place
	mkdir -p $(CURDIR)/debian/geonode/var/lib/geonode
	cp -rp $(CURDIR)/GeoNode-*/pavement.py $(CURDIR)/debian/geonode/var/lib/geonode/
	cp -rp $(CURDIR)/GeoNode-*/bootstrap.py $(CURDIR)/debian/geonode/var/lib/geonode/
	cp -rp $(CURDIR)/GeoNode-*/geonode-webapp.pybundle $(CURDIR)/debian/geonode/var/lib/geonode/
	# Fourth step is to install the binary
	mkdir -p $(CURDIR)/debian/geonode/usr/bin/
	cp -rp $(CURDIR)/debian/support/geonode.binary $(CURDIR)/debian/geonode/usr/bin/geonode
	# Last step is to copy the scripts and patches that would be used in postinst	
	mkdir -p $(CURDIR)/debian/geonode/usr/share/geonode
	mkdir -p $(CURDIR)/debian/geonode/etc/geonetwork
	cp -rp ${CURDIR}/debian/geoserver/web.xml $(CURDIR)/debian/geonode/var/lib/tomcat6/webapps/geoserver/WEB-INF/web.xml
	cp -rp ${CURDIR}/debian/geonetwork/config.xml $(CURDIR)/debian/geonode/etc/geonetwork/
	cp -rp ${CURDIR}/debian/support/geonode.admin $(CURDIR)/debian/geonode/usr/share/geonode/admin.json
	cp -rp ${CURDIR}/debian/support/create_template_postgis-debian.sh $(CURDIR)/debian/geonode/usr/share/geonode/
binary-indep: build install

binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installdebconf
	dh_installdocs
#       dh_installmenu
#       dh_link
#       dh_strip
#       dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
#       .PHONY: build clean binary-indep binary-arch binary install

